"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/new-meetup";
exports.ids = ["pages/api/new-meetup"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "(api)/./pages/api/new-meetup.js":
/*!*********************************!*\
  !*** ./pages/api/new-meetup.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n// api 라우트 설정하기\n// 이 파일은 nextJs가 리엑트앱(프론트앤드)단에서 api 라우트를 설정하는 페이지 파일이다. html코드를 리턴하지 않고 http요청을 받고 패치하며 요청을 삭제하기도 한다.\n// 이 api라우트가 nextJs의 일부로 필요한 api 엔드포인트를 만들어 준다.\n// 그리고 api폴더는 반드시 pages폴더내에 위치해 있어야한다.\n// 그렇게 되면 nextJs가 이 파일들을 api라우트에 보내게 되고 설정된 엔드포인트에서 요청에 의해 타켓팅 되며 JSON데이터를 보내고 받는 형식을 구성하게 된다.\n// 이 파일 이름자체가 URL에서 세그먼트가 될것이고, nextJs는 이곳에 저장되어있는 자바스크립트 파일을 골라내게 될것이다.\n// api 라우터 코드를 작성할땐, 리엑트 컴포넌트를 정의하고 렌더링하거나 리턴하지 않는다. 대신 서버사이드 코드를 포함하는 함수를 정의해야한다.\n// 그리고 이 코드는 서버에서만 돌아가게된다.(클라이언트에 노출되지 X)\n// /api/new-meetup : 이 라우트에 요청이 들어올 떄 이 파일의 코드가 트리거 된다.\n// 아래 hanlder 함수는 \"POST\"요청이 들어올때만 트리거 된다.\n\n// 요청을 받는 서버사이드 로직 함수(클라이언트에서는 확인할 수 없음)\n// 이 함수가 몽고db 연결하면서 promise를 반환하므로 async await으로 설정\nconst handler = async (req, res)=>{\n    // req : 들어오는 요청에 관한 데이터 객체\n    // res : 보내는 응답에 설정하는 객체\n    if (req.method === \"POST\") {\n        const data = req.body; // 요청 보낸 바디에서 데이터 추출\n        const client = await mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient.connect(\"mongodb+srv://SuamKang:Suamy1452@cluster0.p9kse3c.mongodb.net/meetups?retryWrites=true&w=majority\"); // 설정한 몽고db 연결(꺽쇠괄호 대신username과 password입력), 그리고 데이터베이스 이름도 변경 -> 'net/' 다음으로 오는 부분에 meetups지정\n        const db = client.db(); // 현재 \"meetups\"에 연결중인 db확보(없다면 새로 생성됨)\n        // collection(tables) > document(항목) : 객체형식 -> meetup은 여러 meetups중 하나의 document가 될것이다. => 여러개의 문서들이 모여 하나의 컬렉션이 구성됨\n        const meetupsCollection = db.collection(\"meetups\"); // 해당 이름으로 컬렉션 보관 -> meetup관련 데이터가 모인 문서들 컬렉션이 저장된다.\n        const result = await meetupsCollection.insertOne(data); // 컬렉션에 새 문서(객체 하나)를 삽입하기 위한 query명령중 하나인 메소드\n        console.log(result);\n        client.close(); // db작업 후 연결 차단\n        res.status(201).json({\n            message: \"New Meetup inserted!\"\n        });\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (handler); // api 라우트 hanlder 로직 플로우\n // 1. 요청들어오면 해당 api함수 트리거\n // 2. 요청객체로 받은 data를 몽고db에 새로 저장\n // 3. res객체로 응답 보내기\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvbmV3LW1lZXR1cC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxlQUFlO0FBRWYscUdBQXFHO0FBQ3JHLCtDQUErQztBQUMvQyxzQ0FBc0M7QUFDdEMsOEZBQThGO0FBQzlGLHdFQUF3RTtBQUV4RSxrRkFBa0Y7QUFDbEYseUNBQXlDO0FBRXpDLHVEQUF1RDtBQUV2RCx5Q0FBeUM7QUFFSDtBQUV0Qyx3Q0FBd0M7QUFDeEMsbURBQW1EO0FBQ25ELE1BQU1DLE9BQU8sR0FBRyxPQUFPQyxHQUFHLEVBQUVDLEdBQUcsR0FBSztJQUNsQywyQkFBMkI7SUFDM0Isd0JBQXdCO0lBRXhCLElBQUlELEdBQUcsQ0FBQ0UsTUFBTSxLQUFLLE1BQU0sRUFBRTtRQUN6QixNQUFNQyxJQUFJLEdBQUdILEdBQUcsQ0FBQ0ksSUFBSSxFQUFFLG9CQUFvQjtRQUUzQyxNQUFNQyxNQUFNLEdBQUcsTUFBTVAsd0RBQW1CLENBQ3RDLG1HQUFtRyxDQUNwRyxFQUFFLDhGQUE4RjtRQUNqRyxNQUFNUyxFQUFFLEdBQUdGLE1BQU0sQ0FBQ0UsRUFBRSxFQUFFLEVBQUUsc0NBQXNDO1FBQzlELG1IQUFtSDtRQUVuSCxNQUFNQyxpQkFBaUIsR0FBR0QsRUFBRSxDQUFDRSxVQUFVLENBQUMsU0FBUyxDQUFDLEVBQUUsb0RBQW9EO1FBRXhHLE1BQU1DLE1BQU0sR0FBRyxNQUFNRixpQkFBaUIsQ0FBQ0csU0FBUyxDQUFDUixJQUFJLENBQUMsRUFBRSw2Q0FBNkM7UUFDckdTLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSCxNQUFNLENBQUMsQ0FBQztRQUVwQkwsTUFBTSxDQUFDUyxLQUFLLEVBQUUsQ0FBQyxDQUFDLGVBQWU7UUFFL0JiLEdBQUcsQ0FBQ2MsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUM7WUFBRUMsT0FBTyxFQUFFLHNCQUFzQjtTQUFFLENBQUMsQ0FBQztJQUM1RCxDQUFDO0FBQ0gsQ0FBQztBQUVELGlFQUFlbEIsT0FBTyxFQUFDLENBRXZCLHlCQUF5QjtDQUN6Qix5QkFBeUI7Q0FDekIsZ0NBQWdDO0NBQ2hDLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1jb3Vyc2UvLi9wYWdlcy9hcGkvbmV3LW1lZXR1cC5qcz83Mzk0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGFwaSDrnbzsmrDtirgg7ISk7KCV7ZWY6riwXG5cbi8vIOydtCDtjIzsnbzsnYAgbmV4dEpz6rCAIOumrOyXke2KuOyVsSjtlITroaDtirjslaTrk5wp64uo7JeQ7IScIGFwaSDrnbzsmrDtirjrpbwg7ISk7KCV7ZWY64qUIO2OmOydtOyngCDtjIzsnbzsnbTri6QuIGh0bWzsvZTrk5zrpbwg66as7YS07ZWY7KeAIOyViuqzoCBodHRw7JqU7LKt7J2EIOuwm+qzoCDtjKjsuZjtlZjrqbAg7JqU7LKt7J2EIOyCreygnO2VmOq4sOuPhCDtlZzri6QuXG4vLyDsnbQgYXBp65287Jqw7Yq46rCAIG5leHRKc+ydmCDsnbzrtoDroZwg7ZWE7JqU7ZWcIGFwaSDsl5Trk5ztj6zsnbjtirjrpbwg66eM65Ok7Ja0IOykgOuLpC5cbi8vIOq3uOumrOqzoCBhcGntj7TrjZTripQg67CY65Oc7IucIHBhZ2Vz7Y+0642U64K07JeQIOychOy5mO2VtCDsnojslrTslbztlZzri6QuXG4vLyDqt7jroIfqsowg65CY66m0IG5leHRKc+qwgCDsnbQg7YyM7J2865Ok7J2EIGFwaeudvOyasO2KuOyXkCDrs7TrgrTqsowg65CY6rOgIOyEpOygleuQnCDsl5Trk5ztj6zsnbjtirjsl5DshJwg7JqU7LKt7JeQIOydmO2VtCDtg4DsvJPtjIUg65CY66mwIEpTT07rjbDsnbTthLDrpbwg67O064K06rOgIOuwm+uKlCDtmJXsi53snYQg6rWs7ISx7ZWY6rKMIOuQnOuLpC5cbi8vIOydtCDtjIzsnbwg7J2066aE7J6Q7LK06rCAIFVSTOyXkOyEnCDshLjqt7jrqLztirjqsIAg65Cg6rKD7J206rOgLCBuZXh0SnPripQg7J206rOz7JeQIOyggOyepeuQmOyWtOyeiOuKlCDsnpDrsJTsiqTtgazrpr3tirgg7YyM7J287J2EIOqzqOudvOuCtOqyjCDrkKDqsoPsnbTri6QuXG5cbi8vIGFwaSDrnbzsmrDthLAg7L2U65Oc66W8IOyekeyEse2VoOuVkCwg66as7JeR7Yq4IOy7tO2PrOuEjO2KuOulvCDsoJXsnZjtlZjqs6Ag66CM642U66eB7ZWY6rGw64KYIOumrO2EtO2VmOyngCDslYrripTri6QuIOuMgOyLoCDshJzrsoTsgqzsnbTrk5wg7L2U65Oc66W8IO2PrO2VqO2VmOuKlCDtlajsiJjrpbwg7KCV7J2Y7ZW07JW87ZWc64ukLlxuLy8g6re466as6rOgIOydtCDsvZTrk5zripQg7ISc67KE7JeQ7ISc66eMIOuPjOyVhOqwgOqyjOuQnOuLpC4o7YG065287J207Ja47Yq47JeQIOuFuOy2nOuQmOyngCBYKVxuXG4vLyAvYXBpL25ldy1tZWV0dXAgOiDsnbQg65287Jqw7Yq47JeQIOyalOyyreydtCDrk6TslrTsmKwg65aEIOydtCDtjIzsnbzsnZgg7L2U65Oc6rCAIO2KuOumrOqxsCDrkJzri6QuXG5cbi8vIOyVhOuemCBoYW5sZGVyIO2VqOyImOuKlCBcIlBPU1RcIuyalOyyreydtCDrk6TslrTsmKzrlYzrp4wg7Yq466as6rGwIOuQnOuLpC5cblxuaW1wb3J0IHsgTW9uZ29DbGllbnQgfSBmcm9tIFwibW9uZ29kYlwiO1xuXG4vLyDsmpTssq3snYQg67Cb64qUIOyEnOuyhOyCrOydtOuTnCDroZzsp4Eg7ZWo7IiYKO2BtOudvOydtOyWuO2KuOyXkOyEnOuKlCDtmZXsnbjtlaAg7IiYIOyXhuydjClcbi8vIOydtCDtlajsiJjqsIAg66q96rOgZGIg7Jew6rKw7ZWY66m07IScIHByb21pc2Xrpbwg67CY7ZmY7ZWY66+A66GcIGFzeW5jIGF3YWl07Jy866GcIOyEpOyglVxuY29uc3QgaGFuZGxlciA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAvLyByZXEgOiDrk6TslrTsmKTripQg7JqU7LKt7JeQIOq0gO2VnCDrjbDsnbTthLAg6rCd7LK0XG4gIC8vIHJlcyA6IOuztOuCtOuKlCDsnZHri7Xsl5Ag7ISk7KCV7ZWY64qUIOqwneyytFxuXG4gIGlmIChyZXEubWV0aG9kID09PSBcIlBPU1RcIikge1xuICAgIGNvbnN0IGRhdGEgPSByZXEuYm9keTsgLy8g7JqU7LKtIOuztOuCuCDrsJTrlJTsl5DshJwg642w7J207YSwIOy2lOy2nFxuXG4gICAgY29uc3QgY2xpZW50ID0gYXdhaXQgTW9uZ29DbGllbnQuY29ubmVjdChcbiAgICAgIFwibW9uZ29kYitzcnY6Ly9TdWFtS2FuZzpTdWFteTE0NTJAY2x1c3RlcjAucDlrc2UzYy5tb25nb2RiLm5ldC9tZWV0dXBzP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiXG4gICAgKTsgLy8g7ISk7KCV7ZWcIOuqveqzoGRiIOyXsOqysCjqur3sh6DqtITtmLgg64yA7IugdXNlcm5hbWXqs7wgcGFzc3dvcmTsnoXroKUpLCDqt7jrpqzqs6Ag642w7J207YSw67Kg7J207IqkIOydtOumhOuPhCDrs4Dqsr0gLT4gJ25ldC8nIOuLpOydjOycvOuhnCDsmKTripQg67aA67aE7JeQIG1lZXR1cHPsp4DsoJVcbiAgICBjb25zdCBkYiA9IGNsaWVudC5kYigpOyAvLyDtmITsnqwgXCJtZWV0dXBzXCLsl5Ag7Jew6rKw7KSR7J24IGRi7ZmV67O0KOyXhuuLpOuptCDsg4jroZwg7IOd7ISx65CoKVxuICAgIC8vIGNvbGxlY3Rpb24odGFibGVzKSA+IGRvY3VtZW50KO2VreuqqSkgOiDqsJ3ssrTtmJXsi50gLT4gbWVldHVw7J2AIOyXrOufrCBtZWV0dXBz7KSRIO2VmOuCmOydmCBkb2N1bWVudOqwgCDrkKDqsoPsnbTri6QuID0+IOyXrOufrOqwnOydmCDrrLjshJzrk6TsnbQg66qo7JesIO2VmOuCmOydmCDsu6zroInshZjsnbQg6rWs7ISx65CoXG5cbiAgICBjb25zdCBtZWV0dXBzQ29sbGVjdGlvbiA9IGRiLmNvbGxlY3Rpb24oXCJtZWV0dXBzXCIpOyAvLyDtlbTri7kg7J2066aE7Jy866GcIOy7rOugieyFmCDrs7TqtIAgLT4gbWVldHVw6rSA66CoIOuNsOydtO2EsOqwgCDrqqjsnbgg66y47ISc65OkIOy7rOugieyFmOydtCDsoIDsnqXrkJzri6QuXG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBtZWV0dXBzQ29sbGVjdGlvbi5pbnNlcnRPbmUoZGF0YSk7IC8vIOy7rOugieyFmOyXkCDsg4gg66y47IScKOqwneyytCDtlZjrgpgp66W8IOyCveyehe2VmOq4sCDsnITtlZwgcXVlcnnrqoXroLnspJEg7ZWY64KY7J24IOuplOyGjOuTnFxuICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7XG5cbiAgICBjbGllbnQuY2xvc2UoKTsgLy8gZGLsnpHsl4Ug7ZuEIOyXsOqysCDssKjri6hcblxuICAgIHJlcy5zdGF0dXMoMjAxKS5qc29uKHsgbWVzc2FnZTogXCJOZXcgTWVldHVwIGluc2VydGVkIVwiIH0pO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBoYW5kbGVyO1xuXG4vLyBhcGkg65287Jqw7Yq4IGhhbmxkZXIg66Gc7KeBIO2UjOuhnOyasFxuLy8gMS4g7JqU7LKt65Ok7Ja07Jik66m0IO2VtOuLuSBhcGntlajsiJgg7Yq466as6rGwXG4vLyAyLiDsmpTssq3qsJ3ssrTroZwg67Cb7J2AIGRhdGHrpbwg66q96rOgZGLsl5Ag7IOI66GcIOyggOyepVxuLy8gMy4gcmVz6rCd7LK066GcIOydkeuLtSDrs7TrgrTquLBcbiJdLCJuYW1lcyI6WyJNb25nb0NsaWVudCIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJkYXRhIiwiYm9keSIsImNsaWVudCIsImNvbm5lY3QiLCJkYiIsIm1lZXR1cHNDb2xsZWN0aW9uIiwiY29sbGVjdGlvbiIsInJlc3VsdCIsImluc2VydE9uZSIsImNvbnNvbGUiLCJsb2ciLCJjbG9zZSIsInN0YXR1cyIsImpzb24iLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/new-meetup.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/new-meetup.js"));
module.exports = __webpack_exports__;

})();